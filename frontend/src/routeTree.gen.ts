/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as DashboardImport } from "./routes/dashboard";

// Create Virtual Routes

const UserProfileLazyImport = createFileRoute("/user/profile")();
const AuthenticationLoginLazyImport = createFileRoute(
  "/authentication/login"
)();

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  path: "/dashboard",
  getParentRoute: () => rootRoute,
} as any);

const UserProfileLazyRoute = UserProfileLazyImport.update({
  path: "/user/profile",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/user/profile.lazy").then((d) => d.Route));

const AuthenticationLoginLazyRoute = AuthenticationLoginLazyImport.update({
  path: "/authentication/login",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/authentication/login.lazy").then((d) => d.Route)
);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/dashboard": {
      id: "/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof DashboardImport;
      parentRoute: typeof rootRoute;
    };
    "/authentication/login": {
      id: "/authentication/login";
      path: "/authentication/login";
      fullPath: "/authentication/login";
      preLoaderRoute: typeof AuthenticationLoginLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/user/profile": {
      id: "/user/profile";
      path: "/user/profile";
      fullPath: "/user/profile";
      preLoaderRoute: typeof UserProfileLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/dashboard": typeof DashboardRoute;
  "/authentication/login": typeof AuthenticationLoginLazyRoute;
  "/user/profile": typeof UserProfileLazyRoute;
}

export interface FileRoutesByTo {
  "/dashboard": typeof DashboardRoute;
  "/authentication/login": typeof AuthenticationLoginLazyRoute;
  "/user/profile": typeof UserProfileLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/dashboard": typeof DashboardRoute;
  "/authentication/login": typeof AuthenticationLoginLazyRoute;
  "/user/profile": typeof UserProfileLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/dashboard" | "/authentication/login" | "/user/profile";
  fileRoutesByTo: FileRoutesByTo;
  to: "/dashboard" | "/authentication/login" | "/user/profile";
  id: "__root__" | "/dashboard" | "/authentication/login" | "/user/profile";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRoute;
  AuthenticationLoginLazyRoute: typeof AuthenticationLoginLazyRoute;
  UserProfileLazyRoute: typeof UserProfileLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRoute,
  AuthenticationLoginLazyRoute: AuthenticationLoginLazyRoute,
  UserProfileLazyRoute: UserProfileLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/dashboard",
        "/authentication/login",
        "/user/profile"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/authentication/login": {
      "filePath": "authentication/login.lazy.tsx"
    },
    "/user/profile": {
      "filePath": "user/profile.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
